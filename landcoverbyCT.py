# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# test1.py
# Created: Kate Schertz
#   (generated by ArcGIS/ModelBuilder)
# Description: Script to get raster values of land cover for City of Chicago
# Census tracts
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

arcpy.CheckOutExtension("Spatial")

# Local variables:
#Raster
Extract_byCT = "C:\\Users\\BermanLab\\Documents\\ArcGIS\\Chicago.gdb\\Extract_byCT"
#Borders of all census tracts
CensusTracts = "C:\\Users\\BermanLab\\Documents\\ArcGIS\\Chicago.gdb\\CensusTracts"
#The selected census tract for this loop
CensusTracts_Select = "C:\\Users\\BermanLab\\Documents\\ArcGIS\\Chicago.gdb\\CensusTracts_Select"
#The part of the raster selected for this loop
Extract_byCT1 = "C:\\Users\\BermanLab\\Documents\\ArcGIS\\Chicago.gdb\\Extract_byCT1"

Delete_succeeded = "false"
CensusTracts__2_ = "C:\\Users\\BermanLab\\Documents\\ArcGIS\\Chicago.gdb\\CensusTracts"
CensusTracts__3_ = CensusTracts__2_

for x in range (1,802):

    # Process: Select
    arcpy.Select_analysis(CensusTracts, CensusTracts_Select, "OBJECTID =" + str(x))

    # Process: Extract by Mask
    arcpy.gp.ExtractByMask_sa(Extract_byCT, CensusTracts_Select, Extract_byCT1)

    # Getting the values from the raster for each land cover variable, multiplying by 4 to get area in square ft
    for rastervalue in range (1,8):

        field = "Count"
        cursor = arcpy.SearchCursor(Extract_byCT1, '"value" = ' + str(rastervalue))
        for row in cursor:

            gravy = row.getValue(field)

            cursor2 = arcpy.UpdateCursor(CensusTracts, "OBJECTID =" + str(x))
            for row2 in cursor2:
                if rastervalue == 1:
                    row2.value1 = gravy * 4
                    cursor2.updateRow(row2)
                elif rastervalue == 2:
                    row2.value2 = gravy * 4
                    cursor2.updateRow(row2)
                elif rastervalue == 3:
                    row2.value3 = gravy * 4
                    cursor2.updateRow(row2)
                elif rastervalue == 4:
                    row2.value4 = gravy * 4
                    cursor2.updateRow(row2)
                elif rastervalue == 5:
                    row2.value5 = gravy * 4
                    cursor2.updateRow(row2)
                elif rastervalue == 6:
                    row2.value6 = gravy * 4
                    cursor2.updateRow(row2)
                else:
                    row2.value7 = gravy * 4
                    cursor2.updateRow(row2)

            print gravy

    # Process: Delete
    arcpy.Delete_management(Extract_byCT1, "")
    
    # Process: Delete
    arcpy.Delete_management(CensusTracts_Select, "")

    print x
